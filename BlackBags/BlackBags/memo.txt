몇 가지 다시 잡아야 할 것들을 정리해봅니다.

13.12.01 ~올해 마지막 달..ㄷㄷ
1.CImageRender사용법
	우선 이미지를 사용하는 씬에서 
	ID2D1Bitmap *m_pImage;
	팩토리, 렌더타겟은 렌더러에서 하는 방법과 같아서 생략하고..
	m_pImage = CRenderer::GetInstance()->CreateImage(L"Resource/Image/name.jpg",m_pImage);
	
	렌더하는 부분
	m_pRenderTarget->DrawBitmap(m_pImage,D2D1::RectF(왼쪽좌표,탑좌표,그림가로크기,그림세로크기));

13.11.23

1.	if (IsEnd() )
		{
			m_Map->WriteResult();
			CGameData::GetInstance()->SetCurrentScene( SC_RESULT );
		}

	여기서 바로 Result로 넘어가는게 아니라 뭐 빠방 같은거라도 넣어줘야

2.	brush들 따로 만들어서 쓰지 말고 gameData에 넣어서 같이 공유해서 사용할 것


13.11.20 

1.	wooq/GDI사용하지 말고 D2D사용할 것(FPS 부분 확인 필요)


13.11.17 일요일

1. wooq/현재 config.h에 있는 const값들 변수명 앞에 어떤 scene에서 사용하는지 알 수 있게 붙이는 게 좋을 것 같음


13.11.12 화요일
1.JG/ m_Player[i]순서 바꾸는 것을 조금 수정했습니다. memcpy 쓰는 것 보단 가볍게 바꾼 것 같은데..
	    나중에 게임 진행 편의를 위해 i가 곧 플레이 순서로 하도록 하기 위해서는 임시 변수 없이 순서 셔플하는게 불가능한 거 같아요.
		결국 변수를 쓰긴함 ㅎㅎㅎ 


13.11.4 목요일

1.JG/ main함수에서 WM_LBUTTONDOWN을 할 경우에 IsPossible()을 확인하여 Update해주고 있는데.. 이 구조가 맞는것인지?
	사실 감이 잘 안옵니다ㅜㅜ 붹 왠지 느낌으로는 클릭을 당하는 애가 "아 나 맞았어!"라고 해줘야 할 거 같은데 .. 그냥 객체 구조에 너무 신경써서 그런거 같기도 하고.. 
2. JG/ Player클래스는 도대체 뭘 하는 것인가?
	뭔가 로직이 이미 모든걸 알고 있으면서.. 굳이 ! 플레이어야 뭘 선택했니? -> 여기요! -> 아 그렇구나 여기구나 이러는 느낌.
3. JG/
	
4. wooq/초기에 임의로 배치되는 울타리들 가운에 울타리 하나만 그으면 닫히게 되는 경우를 제외시킬 수 있어야 함. 
		아니면 플레이어들이 직접 그을 수 있게 해도 될 듯. 더 재밌는 방향으로 진행 ㄱㄱ



